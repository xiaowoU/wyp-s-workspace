# Generated by Django 3.1.4 on 2020-12-25 15:46

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=64, verbose_name='单位名')),
                ('address', models.CharField(blank=True, max_length=64, null=True, verbose_name='地址')),
                ('key_person', models.CharField(blank=True, max_length=64, null=True, verbose_name='关键人物')),
                ('contacts', models.CharField(blank=True, max_length=64, null=True, verbose_name='联系人')),
                ('manager', models.CharField(blank=True, max_length=64, null=True, verbose_name='负责人')),
                ('contract_number', models.CharField(blank=True, max_length=64, null=True, verbose_name='合同编号')),
            ],
            options={
                'verbose_name': '单位表',
                'verbose_name_plural': '单位表',
                'db_table': 't_company',
            },
        ),
        migrations.CreateModel(
            name='OperateCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('manage_company', models.CharField(max_length=128, verbose_name='运营单位')),
                ('superior_company', models.CharField(blank=True, max_length=128, null=True, verbose_name='上级')),
                ('contacts', models.CharField(blank=True, max_length=128, null=True, verbose_name='联系人')),
            ],
            options={
                'verbose_name': '运营单位表',
                'verbose_name_plural': '运营单位表',
                'db_table': 't_operate_company',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('device_sn', models.CharField(max_length=128, verbose_name='设备编号')),
                ('position', models.CharField(max_length=128, verbose_name='安装位置')),
            ],
            options={
                'verbose_name': '设备位置表',
                'verbose_name_plural': '设备位置表',
                'db_table': 't_position',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=128, verbose_name='隧道名')),
                ('owner_company', models.CharField(blank=True, max_length=128, null=True, verbose_name='业主单位')),
                ('manage_company', models.CharField(blank=True, max_length=128, null=True, verbose_name='运营单位')),
                ('province', models.CharField(max_length=32, verbose_name='所属省')),
                ('city', models.CharField(max_length=32, verbose_name='所属市')),
                ('district', models.CharField(max_length=32, verbose_name='所属区/县')),
                ('position', models.CharField(max_length=32, verbose_name='位置')),
            ],
            options={
                'verbose_name': '项目表',
                'verbose_name_plural': '项目表',
                'db_table': 't_project',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=64, verbose_name='隧道边幅名称')),
                ('mileage', models.CharField(max_length=64, verbose_name='里程')),
                ('project', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_manage.project', verbose_name='所属工程')),
            ],
            options={
                'verbose_name': '断面表',
                'verbose_name_plural': '断面表',
                'db_table': 't_section',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('device_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备名称')),
                ('device_sn', models.CharField(max_length=128, verbose_name='设备编号')),
                ('firmware_version', models.CharField(blank=True, max_length=32, null=True, verbose_name='固件版本')),
                ('type', models.IntegerField(blank=True, null=True, verbose_name='设备类型')),
                ('model', models.CharField(blank=True, max_length=32, null=True, verbose_name='型号')),
                ('ip', models.CharField(blank=True, max_length=64, null=True, verbose_name='逻辑ID')),
                ('mac', models.CharField(blank=True, max_length=64, null=True, verbose_name='MAC地址')),
                ('section', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_manage.section', verbose_name='所属断面')),
            ],
            options={
                'verbose_name': '设备表',
                'verbose_name_plural': '设备表',
                'db_table': 't_device',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('real_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='真实姓名')),
                ('tel', models.CharField(blank=True, max_length=64, null=True, verbose_name='联系电话')),
                ('wechat', models.CharField(blank=True, max_length=64, null=True, verbose_name='微信')),
                ('company', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_manage.project', verbose_name='所属单位')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
                'db_table': 't_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
